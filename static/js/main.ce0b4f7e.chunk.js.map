{"version":3,"sources":["componenets/WeatherApi.jsx","componenets/form/FormText.jsx","componenets/form/FormDate.jsx","componenets/form/FormRadio.jsx","componenets/Forms.jsx","App.js","index.js"],"names":["WeatherApi","props","city","baseURI","useState","weather","setWeather","error","setError","useEffect","axios","get","then","res","data","console","log","catch","err","className","name","sys","country","Math","round","main","temp","coord","lat","lon","FormText","type","label","variant","as","TextField","FormDate","InputLabelProps","shrink","FormRadio","values","labels","value","loginSchema","Yup","shape","firstName","required","min","max","matches","lastName","email","userName","password","dob","test","birthdate","cutoff","Date","setFullYear","getFullYear","rePassword","oneOf","pin","gender","initialValues","Forms","showWeather","setShowWeather","cityName","setCityName","validationSchema","onSubmit","Button","size","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce0b4f7e.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function WeatherApi(props) {\r\n  let { city } = props;\r\n  let baseURI = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=0c8a1ab5717f74d9705a27b1da25fbc5`;\r\n  const [weather, setWeather] = useState(null);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(baseURI)\r\n      .then((res) => {\r\n        setWeather((res.data));\r\n        console.log(res.data)\r\n        setError(null)\r\n      })\r\n      .catch((err) => setError(err));\r\n  }, [baseURI]);\r\n\r\n  if (!weather) return <div>Loading</div>\r\n  if (error) return <div>City name is not correct.</div>\r\n  return (\r\n    <>\r\n      <div className=\"weather\">\r\n        <h1>Weather</h1>\r\n        <p>City Name : {weather.name}</p>\r\n        <p>Country : {weather.sys.country}</p>\r\n        <p>Temprature : {Math.round(weather.main.temp - 273.15)} &#x2103;</p>\r\n        <p>Weather : {weather.weather[0].main}</p>\r\n        <p>Latitude : {weather.coord.lat}</p>\r\n        <p>Longitude : {weather.coord.lon}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}","import React from 'react'\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function FormText(props) {\r\n    let { name,type, label } = props;\r\n    return (\r\n        <div>\r\n            <Field\r\n                variant=\"outlined\"\r\n                name={name}\r\n                label={label}\r\n                type={type}\r\n                as={TextField}\r\n              />\r\n              <div className=\"error\">\r\n                <ErrorMessage name={name} />\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Field, ErrorMessage } from \"formik\";\r\nimport { TextField } from \"@material-ui/core\";\r\n\r\nexport default function FormDate(props) {\r\n    let { name,type, label } = props;\r\n    return (\r\n        <div>\r\n            <Field\r\n                variant=\"outlined\"\r\n                name={name}\r\n                label={label}\r\n                type={type}\r\n                as={TextField}\r\n                InputLabelProps={{ shrink: true }}\r\n              />\r\n              <div className=\"error\">\r\n                <ErrorMessage name={name} />\r\n              </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Field, ErrorMessage } from \"formik\";\r\n\r\nexport default function FormRadio(props) {\r\n  let { name, values, labels } = props;\r\n  return (\r\n    <div>\r\n       <label>\r\n      <Field type=\"radio\" name={name} value={values[0]} />\r\n      {labels[0]}\r\n    </label>\r\n    <label>\r\n      <Field type=\"radio\" name={name} value={values[1]} />\r\n      {labels[1]}\r\n    </label>\r\n    <label>\r\n      <Field type=\"radio\" name={name} value={values[2]} />\r\n      {labels[2]}\r\n    </label>\r\n      <div className=\"error\">\r\n        <ErrorMessage name={name} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n// called by !!!\r\n\r\n{/* <FormRadio name=\"gender\" values={[\"male\", \"female\", \"other\"]} labels={[\"Male\", \"Female\", \"Other\"]}/> */}","import React, { useState } from \"react\";\r\nimport \"../App.css\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\nimport * as Yup from \"yup\";\r\nimport WeatherApi from \"./WeatherApi\";\r\nimport FormText from \"./form/FormText\";\r\nimport FormDate from './form/FormDate'\r\nimport FormRadio from \"./form/FormRadio\";\r\n\r\n// form validation Schema using Yup\r\nconst loginSchema = Yup.object().shape({\r\n  firstName: Yup.string().required().min(2).max(20).matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\r\n  lastName: Yup.string().required().min(2).max(20).matches(/^[A-Za-z ]*$/, 'Please enter valid name'),\r\n  email: Yup.string().email().required(),\r\n  userName: Yup.string().required().min(4).max(20),\r\n  password: Yup.string()\r\n    .required()\r\n    .min(8)\r\n    .matches(/(?=.*?[A-Z])/g, \"Should contain a Capital latter\")\r\n    .matches(/(?=.*?[a-z])/g, \"Should contain a Small latter\")\r\n    .matches(/(?=.*?[0-9])/g, \"Should contain a Number\")\r\n    .matches(/(?=.*?[#?!@$%^&*-])/g, \"Should contain a Spacial latter\"),\r\n  dob: Yup.date().required().test(\"age\", \"You must be 18 or older\", function (birthdate) {\r\n    const cutoff = new Date();\r\n    cutoff.setFullYear(cutoff.getFullYear() - 18);\r\n    return birthdate <= cutoff;\r\n  }),\r\n  rePassword: Yup.string()\r\n    .oneOf([Yup.ref(\"password\")], \"password should match\")\r\n    .required(),\r\n  city: Yup.string().required().matches(/^[A-Za-z ]*$/, 'Please enter valid city name'),\r\n  pin: Yup.number()\r\n    .required()\r\n    .min(100000, \"Pin Code must be of 6 number\")\r\n    .max(999999, \"Pin Code must be of 6 number\"),\r\n  gender: Yup.string().required().oneOf([\"male\", \"female\", \"other\"]),\r\n});\r\n\r\n// form initial values\r\nconst initialValues = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  userName: \"\",\r\n  password: \"\",\r\n  rePassword: \"\",\r\n  city: \"\",\r\n  pin: \"\",\r\n  dob: \"\",\r\n  gender: \"\",\r\n};\r\n\r\nexport function Forms() {\r\n  const [showWeather, setShowWeather] = useState(false);\r\n  const [cityName, setCityName] = useState(\"\");\r\n\r\n  return (\r\n    <div>\r\n      <h1>Form</h1>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={loginSchema}\r\n        onSubmit={(data) => {\r\n          setCityName(data.city);\r\n          setShowWeather(true);\r\n        }}\r\n      >\r\n        {() => (\r\n          <Form className=\"formContainer\">\r\n            <FormText name=\"firstName\" type=\"text\" label=\"First Name\" />\r\n            <FormText name=\"lastName\" type=\"text\" label=\"Last Name\" />\r\n            <FormRadio\r\n              name=\"gender\"\r\n              values={[\"male\", \"female\", \"other\"]}\r\n              labels={[\"Male\", \"Female\", \"Other\"]}\r\n            />\r\n            <FormDate name=\"dob\" type=\"date\" label=\"Date Of Birth\" />\r\n            <FormText name=\"city\" type=\"text\" label=\"City Name\" />\r\n            <FormText name=\"pin\" type=\"number\" label=\"Pin Code\" />\r\n            <FormText name=\"email\" type=\"email\" label=\"Email\" />\r\n            <FormText name=\"userName\" type=\"text\" label=\"username\" />\r\n            <FormText name=\"password\" type=\"password\" label=\"Password\" />\r\n            <FormText\r\n              name=\"rePassword\"\r\n              type=\"password\"\r\n              label=\"Conform Password\"\r\n            />\r\n            <div className=\"submitBtn\">\r\n              <Button\r\n                variant=\"outlined\"\r\n                size=\"large\"\r\n                color=\"primary\"\r\n                type=\"submit\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      {/* conditionally showing the weather tempreture */}\r\n      {showWeather ? <WeatherApi city={cityName} /> : null}\r\n    </div>\r\n  );\r\n}\r\n","import './App.css';\r\nimport {Forms} from './componenets/Forms';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n     <Forms />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n\r\n"],"sourceRoot":""}